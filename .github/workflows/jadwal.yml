# .github/workflows/schedule_publish.yml
name: Scheduled Publish

on:
  schedule:
    - cron: '0 * * * *'  # Jalankan setiap jam
  workflow_dispatch:  # Memungkinkan menjalankan secara manual

jobs:
  publish_drafts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install date-fns

    - name: Publish Scheduled Files
      env:
        TZ: Asia/Makassar  # Set zona waktu Asia/Makassar (+0800)
      run: |
        # Warna untuk output (ANSI escape codes)
        GREEN='\033[0;32m'
        ORANGE='\033[0;33m'
        RED='\033[0;31m'
        NC='\033[0m' # No Color (reset)

        # Waktu sekarang di zona Asia/Makassar
        CURRENT_DATE=$(date '+%Y-%m-%d %H:%M:%S')
        echo "Waktu sekarang: $CURRENT_DATE"
        
        # Inisialisasi counter untuk laporan per direktori
        COUNT_FUTURE_DRAFTS=0
        COUNT_READY_DRAFTS=0
        COUNT_FUTURE_DRAFTSAMP=0
        COUNT_READY_DRAFTSAMP=0
        
        # Loop untuk memeriksa file di `_drafts`
        echo "Memeriksa folder: _drafts"
        for FILE in _drafts/*.md; do
          [ -e "$FILE" ] || continue
          
          SCHEDULED_DATE=$(grep "^date: " "$FILE" | sed "s/date: '\(.*\) +0800'/\1/")
          echo "  Waktu dalam artikel: $SCHEDULED_DATE +0800"
          
          SCHEDULED_TIMESTAMP=$(date -d "$SCHEDULED_DATE" +%s)
          CURRENT_TIMESTAMP=$(date -d "$CURRENT_DATE" +%s)
          
          if [ "$CURRENT_TIMESTAMP" -ge "$SCHEDULED_TIMESTAMP" ]; then
            mkdir -p "_artikel"
            NEW_PATH="_artikel/$(basename "$FILE")"
            mv "$FILE" "$NEW_PATH"
            
            # Verifikasi apakah file sudah dipindahkan
            if [ -e "$NEW_PATH" ]; then
              echo -e "${GREEN}  Status: Dipublish -> $NEW_PATH${NC}"
              COUNT_READY_DRAFTS=$((COUNT_READY_DRAFTS + 1))
            else
              echo -e "${RED}  Error: Gagal memindahkan $FILE ke $NEW_PATH${NC}"
            fi
          else
            echo -e "${ORANGE}  Status: Dijadwalkan di masa mendatang${NC}"
            COUNT_FUTURE_DRAFTS=$((COUNT_FUTURE_DRAFTS + 1))
          fi
        done

        # Loop untuk memeriksa file di `_draftsamp`
        echo "Memeriksa folder: _draftsamp"
        for FILE in _draftsamp/*.md; do
          [ -e "$FILE" ] || continue
          
          SCHEDULED_DATE=$(grep "^date: " "$FILE" | sed "s/date: '\(.*\) +0800'/\1/")
          echo "  Waktu dalam artikel: $SCHEDULED_DATE +0800"
          
          SCHEDULED_TIMESTAMP=$(date -d "$SCHEDULED_DATE" +%s)
          CURRENT_TIMESTAMP=$(date -d "$CURRENT_DATE" +%s)
          
          if [ "$CURRENT_TIMESTAMP" -ge "$SCHEDULED_TIMESTAMP" ]; then
            mkdir -p "_amp"
            NEW_PATH="_amp/$(basename "$FILE")"
            mv "$FILE" "$NEW_PATH"
            
            # Verifikasi apakah file sudah dipindahkan
            if [ -e "$NEW_PATH" ]; then
              echo -e "${GREEN}  Status: Dipublish -> $NEW_PATH${NC}"
              COUNT_READY_DRAFTSAMP=$((COUNT_READY_DRAFTSAMP + 1))
            else
              echo -e "${RED}  Error: Gagal memindahkan $FILE ke $NEW_PATH${NC}"
            fi
          else
            echo -e "${ORANGE}  Status: Dijadwalkan di masa mendatang${NC}"
            COUNT_FUTURE_DRAFTSAMP=$((COUNT_FUTURE_DRAFTSAMP + 1))
          fi
        done

        # Tampilkan laporan akhir di log
        echo ""
        echo "Laporan Folder _drafts:"
        echo "$COUNT_FUTURE_DRAFTS file memiliki jadwal di masa mendatang."
        echo "$COUNT_READY_DRAFTS file memiliki jadwal untuk segera dipublish."
        
        echo ""
        echo "Laporan Folder _draftsamp:"
        echo "$COUNT_FUTURE_DRAFTSAMP file memiliki jadwal di masa mendatang."
        echo "$COUNT_READY_DRAFTSAMP file memiliki jadwal untuk segera dipublish."

    - name: Commit and Push Changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "Auto-publish scheduled files" || echo "Tidak ada perubahan untuk dicommit"
        git push || echo "Tidak ada perubahan untuk dipush"
      if: success() && steps.publish_drafts.outputs.changes
