# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.  

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Terapkan Jekyll ke Situs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
      - master
    paths-ignore:
      - 'update.txt' 
      - '.github/workflows/*'
      - 'app/twitter-post-product/*'

#  workflow_run:
#    workflows: ["Periksa Artikel"]  # Nama workflow di j.yml
#    types:
#      - completed
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  Send_Mail_Product:
    needs: deploy
    runs-on: ubuntu-latest  # Menjalankan workflow di sistem operasi Ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Mengambil kode dari repositori

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Menggunakan versi Node.js 16, Anda bisa sesuaikan dengan versi yang diinginkan

      - name: Install dependencies
        working-directory: app/sendmail-product
        run: |
          npm install  # Menginstal dependensi yang ada di package.json
          
      - name: Run the Node.js script
        working-directory: app/sendmail-product
        run: |
          node server.js  # Menjalankan skrip utama Node.js Anda (sesuaikan dengan path file skrip)
        env:
          SERVICE: ${{ secrets.SERVICE }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_REPO: ${{ secrets.GH_REPO }}
          GITHUB_FILE_PATH: ${{ secrets.GH_FILE_PATH }}
          GITHUB_BRANCH: ${{ secrets.GH_BRANCH }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.EMAIL_FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
          FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
          FIREBASE_LASTSENT: ${{ secrets.FIREBASE_LASTSENT }}
          FIREBASE_SUBSCRIBER: ${{ secrets.FIREBASE_SUBSCRIBER }}
          EMAIL_SECURE: ${{ secrets.EMAIL_SECURE }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}      

  RRS_Product_to_Twitter:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Sesuaikan dengan versi Node.js yang Anda gunakan

      - name: Install dependencies
        working-directory: app/twitter-post-product
        run: |
          npm install  # Menginstal dependensi yang ada di package.json
          
      - name: Run server.js to post on Twitter
        working-directory: app/twitter-post-product
        run: |
          node server.js
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # GitHub Token untuk akses API
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
